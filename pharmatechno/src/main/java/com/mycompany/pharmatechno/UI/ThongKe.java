/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.pharmatechno.UI;

import com.mycompany.pharmatechno.Control.ThongKeDAO;
import com.mycompany.pharmatechno.Model.ThongKeModel;
import java.awt.Dimension;
import java.awt.Font;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public class ThongKe extends javax.swing.JPanel {
      ThongKeDAO tkdao = new ThongKeDAO();
    List<ThongKeModel> tkm = tkdao.filltoArrayList();
    public ThongKe() {
        initComponents();
        addChart();
    }

    private void addChart() {
        // Create dataset
        CategoryDataset dataset = createDataset();

        // Create chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Biểu đồ cột", 
                "Thể loại", 
                "Giá trị", 
                dataset, 
                PlotOrientation.VERTICAL, 
                true, true, false);
        
//        customizeChart(chart);

        // Customize the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(800, 600));

        // Add chart to jPanel1
        JPanelThongKe.setLayout(new java.awt.BorderLayout());
        JPanelThongKe.add(chartPanel, java.awt.BorderLayout.CENTER);
    }

   private CategoryDataset createDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Add data from the database
        for (ThongKeModel tk : tkm) {
            if (tk.getTenThuoc()!= null) {
                dataset.addValue(tk.getTongTien(), "Tổng tiền", tk.getTenThuoc());
            } else {
                // Handle null TenTheLoai
                System.err.println("TenTheLoai is null for a record, skipping this record.");
            }
        }

        return dataset;
    }
    
//private void customizeChart(JFreeChart chart) {
//        CategoryPlot plot = chart.getCategoryPlot();
//        BarRenderer renderer = (BarRenderer) plot.getRenderer();
//
//        // Điều chỉnh khoảng cách giữa các cột
//        renderer.setItemMargin(0.1); // Khoảng cách giữa các cột (tính theo phần trăm của kích thước cột)
//
//        // Điều chỉnh kích thước cột
//        renderer.setMaximumBarWidth(0.1); // Kích thước tối đa của cột (tính theo phần trăm của không gian cột)
//
//        // Thay đổi cỡ chữ của nhãn trục X (Tên thuốc)
//        CategoryAxis domainAxis = plot.getDomainAxis();
//        domainAxis.setLabelFont(new Font("Arial", Font.PLAIN, 20)); // Cỡ chữ của nhãn trục X (Tên thuốc)
//        domainAxis.setTickLabelFont(new Font("Arial", Font.PLAIN, 12)); // Cỡ chữ của các nhãn trục X
//
//        // Thay đổi cỡ chữ của nhãn trục Y (Giá trị)
//        ValueAxis rangeAxis = plot.getRangeAxis();
//        rangeAxis.setLabelFont(new Font("Arial", Font.PLAIN, 13)); // Cỡ chữ của nhãn trục Y
//        rangeAxis.setTickLabelFont(new Font("Arial", Font.PLAIN, 10)); // Cỡ chữ của các nhãn trục Y
//
////        // Thay đổi cỡ chữ của tiêu đề biểu đồ
////        chart.setTitle(new TextTitle(
////            "Biểu đồ cột",
////            new Font("Arial", Font.BOLD, 14) // Cỡ chữ của tiêu đề biểu đồ
////        ));
//    }

    // Phần còn lại của code không thay đổi
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanelThongKe = new javax.swing.JPanel();

        javax.swing.GroupLayout JPanelThongKeLayout = new javax.swing.GroupLayout(JPanelThongKe);
        JPanelThongKe.setLayout(JPanelThongKeLayout);
        JPanelThongKeLayout.setHorizontalGroup(
            JPanelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 879, Short.MAX_VALUE)
        );
        JPanelThongKeLayout.setVerticalGroup(
            JPanelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanelThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanelThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelThongKe;
    // End of variables declaration//GEN-END:variables
}
